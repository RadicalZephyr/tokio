on: [push, pull_request]

# on:
#   push:
#     branches: ["master"]
#   pull_request:
#     branches: ["master"]

name: Test tokio

env:
  RUSTFLAGS: -Dwarnings
  nightly: nightly-2020-01-25

jobs:
  test_tokio:
    name: Test tokio
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      # Run `tokio` with only `full`
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path ${{ github.workspace }}/tokio/Cargo.toml --features full
        env:
          RUST_BACKTRACE: 1
          CI: 'True'
        name: tokio - cargo test --features full

      # Run `tokio` with "unstable" cfg flag
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path ${{ github.workspace }}/tokio/Cargo.toml --features full
        env:
          RUSTFLAGS: '--cfg tokio_unstable'
          RUST_BACKTRACE: 1
          CI: 'True'
        name: tokio - cargo test --features full

  test_subcrates:
    name: Test ${{ matrix.crate }} all-features
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - tokio
          - tests-integration
          - tokio-macros
          - tokio-test
          - tokio-util
          - examples
    steps:
      - uses: actions/checkout@master

      # Run with all crate features
      - name: tokio - cargo test --features full
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path ${{ github.workspace }}/${{ matrix.crate }}/Cargo.toml --all-features
        env:
          RUST_BACKTRACE: 1
          CI: 'True'

        # Check benches
      - name: ${{ matrix.crate }} - cargo check --benches
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path ${{ github.workspace }}/${{ matrix.crate }}/Cargo.toml --all-features --benches
        env:
          RUST_BACKTRACE: 1
          CI: 'True'

      - name: Patch Cargo.toml
        run: |
          set -e

          # Remove any existing patch statements
          mv Cargo.toml Cargo.toml.bck
          sed -n '/\[patch.crates-io\]/q;p' Cargo.toml.bck > Cargo.toml

          # Patch all crates
          cat ci/patch.toml >> Cargo.toml

          # Print `Cargo.toml` for debugging
          echo "~~~~ Cargo.toml ~~~~"
          cat Cargo.toml
          echo "~~~~~~~~~~~~~~~~~~~~"

      # Run with all crate features
      - name: tokio - cargo test --features full
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path ${{ github.workspace }}/${{ matrix.crate }}/Cargo.toml --all-features
        env:
          RUST_BACKTRACE: 1
          CI: 'True'
